Problem 32: Subarray sum equals k
Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2

solution....
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n=nums.size();
        int count=0;
        vector<int>prefixsum(n,0);
        prefixsum[0]=nums[0];
        for(int i=1;i<n;i++){
            prefixsum[i]=prefixsum[i-1]+nums[i];
        }

        unordered_map<int,int>m;
        for(int j=0;j<n;j++){
            if(prefixsum[j]==k)count++;
            int val=prefixsum[j]-k;
            if(m.find(val)!=m.end()){
                count+=m[val];
            }
            if(m.find(prefixsum[j])==m.end()){
                m[prefixsum[j]]=0;
            }
            m[prefixsum[j]]++;
        }
        return count;
        
    }
};

T(n)=O(n);
S(n)=O(n);
