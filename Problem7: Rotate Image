You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]


solution......

class Solution {
public:
    void rotate(vector<vector<int>>& arr) {
        for(int i=0;i<arr.size();i++){
            for (int j=i+1;j<arr[0].size();j++){
                int temp=arr[i][j];
                arr[i][j]=arr[j][i];
                arr[j][i]=temp;
            }
        }

        int left=0, right=arr[0].size()-1;
        while(left<right){
            for(int i=0;i<arr.size();i++){
                int temp=arr[i][left];
                arr[i][left]=arr[i][right];
                arr[i][right]=temp;
            }
            left++;
            right--;
        }

        
    }
};


T(n)=O(n^2);
S(n)=O(1);
